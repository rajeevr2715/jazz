{
  "swagger": "2.0",
  "info": {
    "version": "2017-01-30T23:30:18Z",
    "title": "deployments",
    "description": "CRUD APIs for Deployments"
  },
  "host": "dev-cloud-api.corporate.t-mobile.com",
  "basePath": "/jazz",
  "schemes": [
    "https"
  ],
  "paths": {
    "/deployments": {
      "options": {
        "description": "CORS Support",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/503ErrorResponse"
            }
          }
        }
      },
      "get": {
        "description": "List all deployments for a service/domain/env",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "type": "string",
            "description":"domain for service"
          },
          {
            "name": "service",
            "in": "query",
            "type": "string",
            "description":"name of service"
          },
          {
            "name": "environment",
            "in": "query",
            "type": "string",
            "description":"environment of service"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "required":false,
            "description":"starting record number for deployments"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string" ,
            "required":false,
            "description":"Status of the deployment"

          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "required":false,
            "description":"limit for number of deployments"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Execution",
            "schema": {
              "$ref": "#/definitions/DeploymentGetSuccessResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/503ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a deployment record",
        "parameters": [
          {
            "name": "param",
            "in": "body",
            "description": "post body parameter.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postInputObj"
            }
          }
        ],
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "Successful Execution",
            "schema": {
              "$ref": "#/definitions/DeploymentPostSuccessResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/503ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      }
    },
	"/deployments/{id}": {
      "options": {
        "description": "CORS Support",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
		"parameters":[{
			"name": "id",
			"in": "path",
			"required": true,
			"type": "string"
		}],
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/503ErrorResponse"
            }
          }
        }
      },
      "get": {
        "description": "List deployment details with an deployment id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
		"parameters":[{
			"name": "id",
			"in": "path",
			"required": true,
			"type": "string"
		}],
        "responses": {
          "200": {
            "description": "Successful Execution",
            "schema": {
              "$ref": "#/definitions/DeploymentIdGetSuccessResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/503ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
      "put": {
			"description": "Update an existing deployment",
			"parameters": [
			  {
				"name": "param",
				"in": "body",
				"description": "post body parameter.",
				"required": true,
				"schema": {
				  "$ref": "#/definitions/putInputObj"
				}
			  },
			  {
				"name": "id",
				"in": "path",
				"required": true,
				"type": "string"
			  }
			],
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "Successful Execution",
            "schema": {
              "$ref": "#/definitions/DeploymentIdPutSuccessResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/503ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
	  "delete": {
        "description": "Delete deployment details with an deployment id",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "Successful Execution",
            "schema": {
              "$ref": "#/definitions/DeploymentDeleteSuccessResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      }
    },
	"/deployments/{id}/re-build": {
      "options": {
        "description": "CORS Support",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
		"parameters":[{
			"name": "id",
			"in": "path",
			"required": true,
			"type": "string"
		}],
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/503ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create a deployment record",
        "parameters": [
          {
			"name": "id",
			"in": "path",
			"required": true,
			"type": "string"
		  }
        ],
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "Successful Execution",
            "schema": {
              "$ref": "#/definitions/RetryPostSuccessResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/503ErrorResponse"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      }
	}
  },
  "definitions": { 
    "DeploymentGetSuccessResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/getOutputObj"
        },
        "input": {
          "$ref": "#/definitions/getInputObj"
        }
      },
      "title": "Success Response"
    },
	"RetryPostSuccessResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/retryOutputObj"
        },
        "input": {
          "$ref": "#/definitions/deploymentIdInputObj"
        }
      },
      "title": "Success Response"
    },
	"DeploymentPostSuccessResponse": { 
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/postOutputObj"
        },
        "input": {
          "$ref": "#/definitions/postInputObj"
        }
      },
      "title": "Success Response"
    },
	"DeploymentIdGetSuccessResponse": { 
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/deploymentIdOutputObj"
        },
        "input": {
          "$ref": "#/definitions/deploymentIdInputObj"
        }
      },
      "title": "Success Response"
    },
	"DeploymentIdPutSuccessResponse": { 
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/putOutputObj"
        },
        "input": {
          "$ref": "#/definitions/putInputObj"
        }
      },
      "title": "Success Response"
    },
	"DeploymentDeleteSuccessResponse": { 
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/DeleteOutputObj"
        },
        "input": {
          "$ref": "#/definitions/deploymentIdInputObj"
        }
      },
      "title": "Success Response"
    },
    "400ErrorResponse": {
      "type": "object",
      "properties": {
        "error_type": {
          "type": "string",
          "default": "Bad Request format"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "401ErrorResponse": {
      "type": "object",
      "properties": {
        "errorType": {
          "type": "string",
          "default": "Unauthorized"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "403ErrorResponse": {
      "type": "object",
      "properties": {
        "errorType": {
          "type": "string",
          "default": "Forbidden"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "404ErrorResponse": {
      "type": "object",
      "properties": {
        "error_type": {
          "type": "string",
          "default": "Resource Not Found"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "500ErrorResponse": {
      "type": "object",
      "properties": {
        "error_type": {
          "type": "string",
          "default": "Internal Server Error"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "503ErrorResponse": {
      "type": "object",
      "properties": {
        "error_type": {
          "type": "string",
          "default": "Service Unavailable"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "getInputObj": {
      "type": "object",
      "properties": {
        "service": {
		  "type": "string",
		  "description": "Name of the service"
		},
		"domain": {
		  "type": "string",
		  "description": "Name of the domain the service belongs to"
		},
		"environment": {
		  "type": "string",
		  "description": "Environment logical id for the deployment"
		}
      }
    },
    "getOutputObj": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "gives the total count of the record."
        },
        "deployments": {
          "type": "array",
          "description": "describes the deployments details",
		  "items": {
			"type": "object",
			"description": "deployment details",
			"$ref": "#/definitions/DeploymentObj"
		  }
        }
      }
    },
	"DeploymentObj": {
      "type": "object",
	  "properties": {
		"deployment_id": {
		  "type": "string",
		  "description": "ID of the deployment"
		},
		"service_id": {
		  "type": "string",
		  "description": "ID of the service"
		},
		"service": {
		  "type": "string",
		  "description": "Name of the service"
		},
		"domain": {
		  "type": "string",
		  "description": "Name of the domain the service belongs to"
		},
		"environment_logical_id": {
		  "type": "string",
		  "description": "Environment logical id for the deployment"
		},
		"provider_build_url": {
		  "type": "string",
		  "description": "Provider url for the deployment"
		},
		"provider_build_id": {
		  "type": "string",
		  "description": "Provider build id for the deployment"
		},
		"scm_commit_hash": {
		  "type": "string",
		  "description": "SCM tool commit hash of the deployment"
		},
		"scm_url": {
		  "type": "string",
		  "description": "SCM tool url where the source code is pulled from"
		},
		"scm_branch": {
		  "type": "string",
		  "description": "Name of the branch being deployed"
		},
		"status": {
		  "enum": [
			"successful",
			"started",
			"failed",
			"archived",			
			"aborted",
			"in_progress"
		  ],
		  "description": "Status of the deployment"
		},
		"created_time":{
		  "type": "string",
		  "description": "describes the deployment creation time"
		}
	  }
    },
    "postInputObj": {
      "type": "object",
	  "description" : "Create a deployment record",
	  "required": ["service_id","service", "domain", "environment_logical_id", "provider_build_url", "provider_build_id", "scm_commit_hash","scm_url","scm_branch", "status"],
      "properties": {
		"service_id": {
		  "type": "string",
		  "description": "ID of the service"
		},
		"service": {
		  "type": "string",
		  "description": "Name of the service"
		},
		"domain": {
		  "type": "string",
		  "description": "Name of the domain the service belongs to"
		},
		"environment_logical_id": {
		  "type": "string",
		  "description": "Environment logical id for the deployment"
		},
		"provider_build_url": {
		  "type": "string",
		  "description": "Provider url for the deployment"
		},
		"provider_build_id": {
		  "type": "string",
		  "description": "Provider build id for the deployment"
		},
		"scm_commit_hash": {
		  "type": "string",
		  "description": "SCM tool commit hash of the deployment"
		},
		"scm_url": {
		  "type": "string",
		  "description": "SCM tool url where the source code is pulled from"
		},
		"scm_branch": {
		  "type": "string",
		  "description": "Name of the branch being deployed"
		},
		"status": {
		  "enum": [
			"successful",
			"started",
			"failed",
			"archived",			
			"aborted",
			"in_progress"
		  ],
		  "description": "Status of the deployment"
		}
	  }
    },
    "postOutputObj": {
      "type": "object",
	  "description" : "describes the deployment created response",
      "properties": {
        "result": {
          "type": "string",
          "description": "gives success or error message of deployment creation"
        },
        "deployment_id": {
          "type": "string",
          "description": "describes the deployment Id"
        }
      }
    },
	"deploymentIdInputObj": {
      "type": "object",
      "properties": {
        "id": {
		  "type": "string",
		  "description": "deployment id"
		}
      }
    },
    "deploymentIdOutputObj": {
      "type": "object",
      "description": "deployment details",
	  "$ref": "#/definitions/DeploymentObj"
    },
	"putInputObj": {
      "type": "object",
      "properties": {
		"service_id": {
		  "type": "string",
		  "description": "ID of the service"
		},
		"service": {
		  "type": "string",
		  "description": "Name of the service"
		},
		"domain": {
		  "type": "string",
		  "description": "Name of the domain the service belongs to"
		},
		"environment_logical_id": {
		  "type": "string",
		  "description": "Environment logical id for the deployment"
		},
		"provider_build_url": {
		  "type": "string",
		  "description": "Provider url for the deployment"
		},
		"provider_build_id": {
		  "type": "string",
		  "description": "Provider build id for the deployment"
		},
		"scm_commit_hash": {
		  "type": "string",
		  "description": "SCM tool commit hash of the deployment"
		},
		"scm_url": {
		  "type": "string",
		  "description": "SCM tool url where the source code is pulled from"
		},
		"scm_branch": {
		  "type": "string",
		  "description": "Name of the branch being deployed"
		},
		"status": {
		  "enum": [
			"successful",
			"started",
			"failed",
			"archived",			
			"aborted",
			"in_progress"
		  ],
		  "description": "Status of the deployment"
		}
	  }
    },
    "putOutputObj": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "describes the deployment updated details"
        }
      }
    }, 
	"DeleteOutputObj": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "describes the deployment delete details"
        }
      }
    },
	"retryOutputObj": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "describes the deployment build status"
        }
      }
    }
  }
}