var cov_zwhhosepo=function(){var path="/Users/supritast/Work/T-Mobile/CAP/jazz_splunk-cw-log-streamer/components/utils.js",hash="eecf987eea4d534d68b5f5144e9f39717a1aa7b9",global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/supritast/Work/T-Mobile/CAP/jazz_splunk-cw-log-streamer/components/utils.js",statementMap:{"0":{start:{line:9,column:15},end:{line:9,column:49}},"1":{start:{line:10,column:22},end:{line:10,column:61}},"2":{start:{line:11,column:17},end:{line:11,column:49}},"3":{start:{line:14,column:14},end:{line:28,column:1}},"4":{start:{line:15,column:15},end:{line:15,column:37}},"5":{start:{line:16,column:14},end:{line:16,column:16}},"6":{start:{line:17,column:1},end:{line:26,column:2}},"7":{start:{line:18,column:2},end:{line:25,column:3}},"8":{start:{line:19,column:14},end:{line:19,column:47}},"9":{start:{line:20,column:3},end:{line:24,column:4}},"10":{start:{line:21,column:4},end:{line:21,column:45}},"11":{start:{line:22,column:4},end:{line:22,column:21}},"12":{start:{line:23,column:4},end:{line:23,column:10}},"13":{start:{line:27,column:1},end:{line:27,column:15}},"14":{start:{line:30,column:17},end:{line:41,column:1}},"15":{start:{line:31,column:15},end:{line:31,column:37}},"16":{start:{line:32,column:14},end:{line:32,column:16}},"17":{start:{line:33,column:1},end:{line:39,column:2}},"18":{start:{line:34,column:13},end:{line:34,column:34}},"19":{start:{line:35,column:2},end:{line:38,column:3}},"20":{start:{line:36,column:3},end:{line:36,column:48}},"21":{start:{line:37,column:3},end:{line:37,column:24}},"22":{start:{line:40,column:1},end:{line:40,column:15}},"23":{start:{line:43,column:20},end:{line:75,column:1}},"24":{start:{line:44,column:1},end:{line:74,column:4}},"25":{start:{line:45,column:13},end:{line:45,column:15}},"26":{start:{line:46,column:2},end:{line:46,column:21}},"27":{start:{line:47,column:2},end:{line:47,column:89}},"28":{start:{line:48,column:2},end:{line:73,column:3}},"29":{start:{line:49,column:3},end:{line:49,column:32}},"30":{start:{line:51,column:3},end:{line:51,column:97}},"31":{start:{line:52,column:3},end:{line:58,column:4}},"32":{start:{line:53,column:26},end:{line:53,column:104}},"33":{start:{line:54,column:4},end:{line:54,column:102}},"34":{start:{line:55,column:4},end:{line:55,column:39}},"35":{start:{line:57,column:4},end:{line:57,column:101}},"36":{start:{line:60,column:20},end:{line:60,column:80}},"37":{start:{line:61,column:3},end:{line:67,column:4}},"38":{start:{line:62,column:4},end:{line:62,column:32}},"39":{start:{line:63,column:4},end:{line:63,column:69}},"40":{start:{line:65,column:4},end:{line:65,column:24}},"41":{start:{line:66,column:4},end:{line:66,column:36}},"42":{start:{line:68,column:3},end:{line:68,column:55}},"43":{start:{line:69,column:3},end:{line:69,column:57}},"44":{start:{line:70,column:3},end:{line:70,column:17}},"45":{start:{line:72,column:3},end:{line:72,column:17}},"46":{start:{line:77,column:23},end:{line:141,column:1}},"47":{start:{line:78,column:1},end:{line:78,column:23}},"48":{start:{line:79,column:1},end:{line:140,column:4}},"49":{start:{line:80,column:13},end:{line:80,column:15}},"50":{start:{line:81,column:21},end:{line:81,column:23}},"51":{start:{line:82,column:2},end:{line:82,column:21}},"52":{start:{line:83,column:2},end:{line:83,column:36}},"53":{start:{line:84,column:2},end:{line:84,column:35}},"54":{start:{line:85,column:2},end:{line:85,column:54}},"55":{start:{line:86,column:2},end:{line:86,column:56}},"56":{start:{line:87,column:2},end:{line:87,column:89}},"57":{start:{line:88,column:2},end:{line:88,column:82}},"58":{start:{line:89,column:2},end:{line:89,column:83}},"59":{start:{line:90,column:2},end:{line:93,column:3}},"60":{start:{line:92,column:3},end:{line:92,column:32}},"61":{start:{line:95,column:28},end:{line:95,column:93}},"62":{start:{line:96,column:19},end:{line:96,column:85}},"63":{start:{line:98,column:2},end:{line:104,column:3}},"64":{start:{line:99,column:3},end:{line:99,column:31}},"65":{start:{line:100,column:3},end:{line:100,column:71}},"66":{start:{line:102,column:3},end:{line:102,column:23}},"67":{start:{line:103,column:3},end:{line:103,column:38}},"68":{start:{line:106,column:2},end:{line:106,column:79}},"69":{start:{line:107,column:2},end:{line:107,column:103}},"70":{start:{line:108,column:2},end:{line:110,column:3}},"71":{start:{line:109,column:3},end:{line:109,column:57}},"72":{start:{line:111,column:27},end:{line:111,column:96}},"73":{start:{line:112,column:2},end:{line:112,column:90}},"74":{start:{line:113,column:2},end:{line:113,column:86}},"75":{start:{line:114,column:2},end:{line:116,column:3}},"76":{start:{line:115,column:3},end:{line:115,column:42}},"77":{start:{line:117,column:2},end:{line:117,column:98}},"78":{start:{line:118,column:2},end:{line:118,column:110}},"79":{start:{line:119,column:2},end:{line:119,column:108}},"80":{start:{line:120,column:2},end:{line:120,column:108}},"81":{start:{line:121,column:2},end:{line:121,column:102}},"82":{start:{line:122,column:2},end:{line:122,column:104}},"83":{start:{line:123,column:2},end:{line:123,column:26}},"84":{start:{line:124,column:2},end:{line:124,column:83}},"85":{start:{line:125,column:2},end:{line:125,column:20}},"86":{start:{line:126,column:2},end:{line:139,column:3}},"87":{start:{line:127,column:3},end:{line:130,column:5}},"88":{start:{line:131,column:3},end:{line:131,column:94}},"89":{start:{line:132,column:3},end:{line:132,column:28}},"90":{start:{line:134,column:3},end:{line:134,column:72}},"91":{start:{line:135,column:3},end:{line:138,column:6}},"92":{start:{line:143,column:26},end:{line:195,column:1}},"93":{start:{line:144,column:1},end:{line:194,column:4}},"94":{start:{line:145,column:2},end:{line:193,column:3}},"95":{start:{line:146,column:3},end:{line:185,column:4}},"96":{start:{line:147,column:15},end:{line:147,column:17}},"97":{start:{line:148,column:4},end:{line:148,column:23}},"98":{start:{line:149,column:4},end:{line:151,column:7}},"99":{start:{line:150,column:5},end:{line:150,column:33}},"100":{start:{line:152,column:4},end:{line:152,column:89}},"101":{start:{line:153,column:4},end:{line:153,column:74}},"102":{start:{line:154,column:18},end:{line:154,column:34}},"103":{start:{line:155,column:24},end:{line:155,column:58}},"104":{start:{line:156,column:4},end:{line:161,column:5}},"105":{start:{line:157,column:28},end:{line:157,column:52}},"106":{start:{line:158,column:5},end:{line:158,column:58}},"107":{start:{line:160,column:5},end:{line:160,column:28}},"108":{start:{line:163,column:4},end:{line:163,column:87}},"109":{start:{line:164,column:4},end:{line:166,column:5}},"110":{start:{line:165,column:5},end:{line:165,column:54}},"111":{start:{line:168,column:4},end:{line:174,column:5}},"112":{start:{line:169,column:20},end:{line:169,column:89}},"113":{start:{line:170,column:5},end:{line:170,column:55}},"114":{start:{line:171,column:16},end:{line:171,column:78}},"115":{start:{line:172,column:5},end:{line:172,column:51}},"116":{start:{line:173,column:5},end:{line:173,column:61}},"117":{start:{line:176,column:4},end:{line:176,column:39}},"118":{start:{line:177,column:26},end:{line:180,column:5}},"119":{start:{line:181,column:4},end:{line:181,column:90}},"120":{start:{line:182,column:4},end:{line:182,column:29}},"121":{start:{line:184,column:4},end:{line:184,column:24}},"122":{start:{line:188,column:3},end:{line:188,column:46}},"123":{start:{line:189,column:3},end:{line:192,column:6}},"124":{start:{line:197,column:0},end:{line:201,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:14},end:{line:14,column:15}},loc:{start:{line:14,column:46},end:{line:28,column:1}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:30,column:17},end:{line:30,column:18}},loc:{start:{line:30,column:55},end:{line:41,column:1}},line:30},"2":{name:"(anonymous_2)",decl:{start:{line:43,column:20},end:{line:43,column:21}},loc:{start:{line:43,column:39},end:{line:75,column:1}},line:43},"3":{name:"(anonymous_3)",decl:{start:{line:44,column:20},end:{line:44,column:21}},loc:{start:{line:44,column:41},end:{line:74,column:2}},line:44},"4":{name:"(anonymous_4)",decl:{start:{line:77,column:23},end:{line:77,column:24}},loc:{start:{line:77,column:42},end:{line:141,column:1}},line:77},"5":{name:"(anonymous_5)",decl:{start:{line:79,column:20},end:{line:79,column:21}},loc:{start:{line:79,column:41},end:{line:140,column:2}},line:79},"6":{name:"(anonymous_6)",decl:{start:{line:143,column:26},end:{line:143,column:27}},loc:{start:{line:143,column:58},end:{line:195,column:1}},line:143},"7":{name:"(anonymous_7)",decl:{start:{line:144,column:20},end:{line:144,column:21}},loc:{start:{line:144,column:41},end:{line:194,column:2}},line:144},"8":{name:"(anonymous_8)",decl:{start:{line:149,column:36},end:{line:149,column:37}},loc:{start:{line:149,column:43},end:{line:151,column:5}},line:149}},branchMap:{"0":{loc:{start:{line:17,column:1},end:{line:26,column:2}},type:"if",locations:[{start:{line:17,column:1},end:{line:26,column:2}},{start:{line:17,column:1},end:{line:26,column:2}}],line:17},"1":{loc:{start:{line:20,column:3},end:{line:24,column:4}},type:"if",locations:[{start:{line:20,column:3},end:{line:24,column:4}},{start:{line:20,column:3},end:{line:24,column:4}}],line:20},"2":{loc:{start:{line:20,column:7},end:{line:20,column:22}},type:"binary-expr",locations:[{start:{line:20,column:7},end:{line:20,column:11}},{start:{line:20,column:15},end:{line:20,column:22}}],line:20},"3":{loc:{start:{line:33,column:1},end:{line:39,column:2}},type:"if",locations:[{start:{line:33,column:1},end:{line:39,column:2}},{start:{line:33,column:1},end:{line:39,column:2}}],line:33},"4":{loc:{start:{line:35,column:2},end:{line:38,column:3}},type:"if",locations:[{start:{line:35,column:2},end:{line:38,column:3}},{start:{line:35,column:2},end:{line:38,column:3}}],line:35},"5":{loc:{start:{line:35,column:6},end:{line:35,column:25}},type:"binary-expr",locations:[{start:{line:35,column:6},end:{line:35,column:10}},{start:{line:35,column:14},end:{line:35,column:25}}],line:35},"6":{loc:{start:{line:48,column:2},end:{line:73,column:3}},type:"if",locations:[{start:{line:48,column:2},end:{line:73,column:3}},{start:{line:48,column:2},end:{line:73,column:3}}],line:48},"7":{loc:{start:{line:52,column:3},end:{line:58,column:4}},type:"if",locations:[{start:{line:52,column:3},end:{line:58,column:4}},{start:{line:52,column:3},end:{line:58,column:4}}],line:52},"8":{loc:{start:{line:61,column:3},end:{line:67,column:4}},type:"if",locations:[{start:{line:61,column:3},end:{line:67,column:4}},{start:{line:61,column:3},end:{line:67,column:4}}],line:61},"9":{loc:{start:{line:90,column:2},end:{line:93,column:3}},type:"if",locations:[{start:{line:90,column:2},end:{line:93,column:3}},{start:{line:90,column:2},end:{line:93,column:3}}],line:90},"10":{loc:{start:{line:98,column:2},end:{line:104,column:3}},type:"if",locations:[{start:{line:98,column:2},end:{line:104,column:3}},{start:{line:98,column:2},end:{line:104,column:3}}],line:98},"11":{loc:{start:{line:108,column:2},end:{line:110,column:3}},type:"if",locations:[{start:{line:108,column:2},end:{line:110,column:3}},{start:{line:108,column:2},end:{line:110,column:3}}],line:108},"12":{loc:{start:{line:114,column:2},end:{line:116,column:3}},type:"if",locations:[{start:{line:114,column:2},end:{line:116,column:3}},{start:{line:114,column:2},end:{line:116,column:3}}],line:114},"13":{loc:{start:{line:126,column:2},end:{line:139,column:3}},type:"if",locations:[{start:{line:126,column:2},end:{line:139,column:3}},{start:{line:126,column:2},end:{line:139,column:3}}],line:126},"14":{loc:{start:{line:126,column:6},end:{line:126,column:37}},type:"binary-expr",locations:[{start:{line:126,column:6},end:{line:126,column:21}},{start:{line:126,column:25},end:{line:126,column:37}}],line:126},"15":{loc:{start:{line:145,column:2},end:{line:193,column:3}},type:"if",locations:[{start:{line:145,column:2},end:{line:193,column:3}},{start:{line:145,column:2},end:{line:193,column:3}}],line:145},"16":{loc:{start:{line:145,column:6},end:{line:145,column:58}},type:"binary-expr",locations:[{start:{line:145,column:6},end:{line:145,column:36}},{start:{line:145,column:40},end:{line:145,column:58}}],line:145},"17":{loc:{start:{line:156,column:4},end:{line:161,column:5}},type:"if",locations:[{start:{line:156,column:4},end:{line:161,column:5}},{start:{line:156,column:4},end:{line:161,column:5}}],line:156},"18":{loc:{start:{line:164,column:4},end:{line:166,column:5}},type:"if",locations:[{start:{line:164,column:4},end:{line:166,column:5}},{start:{line:164,column:4},end:{line:166,column:5}}],line:164},"19":{loc:{start:{line:168,column:4},end:{line:174,column:5}},type:"if",locations:[{start:{line:168,column:4},end:{line:174,column:5}},{start:{line:168,column:4},end:{line:174,column:5}}],line:168},"20":{loc:{start:{line:168,column:10},end:{line:168,column:113}},type:"binary-expr",locations:[{start:{line:168,column:10},end:{line:168,column:43}},{start:{line:168,column:47},end:{line:168,column:79}},{start:{line:168,column:83},end:{line:168,column:113}}],line:168}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/**
	Helper functions for Splunk cloudwatch log streamer
	@module: utils.js
	@description: Helper functions for using Regex patterns, etc.
	@author: 
	@version: 1.0
**/const logger=(cov_zwhhosepo.s[0]++,require("../components/logger.js"));const global_config=(cov_zwhhosepo.s[1]++,require("../config/global-config.json"));const truncate=(cov_zwhhosepo.s[2]++,require('unicode-byte-truncate'));// Helper functions
cov_zwhhosepo.s[3]++;var getInfo=function(messages,patternStr){cov_zwhhosepo.f[0]++;let pattern=(cov_zwhhosepo.s[4]++,new RegExp(patternStr));let result=(cov_zwhhosepo.s[5]++,"");cov_zwhhosepo.s[6]++;if(messages){cov_zwhhosepo.b[0][0]++;cov_zwhhosepo.s[7]++;for(let i=0,len=messages.length;i<len;i++){let _tmp=(cov_zwhhosepo.s[8]++,pattern.exec(messages[i].message));cov_zwhhosepo.s[9]++;if((cov_zwhhosepo.b[2][0]++,_tmp)&&(cov_zwhhosepo.b[2][1]++,_tmp[1])){cov_zwhhosepo.b[1][0]++;cov_zwhhosepo.s[10]++;logger.debug("found match..:"+_tmp[1]);cov_zwhhosepo.s[11]++;result=_tmp[1];cov_zwhhosepo.s[12]++;break;}else{cov_zwhhosepo.b[1][1]++;}}}else{cov_zwhhosepo.b[0][1]++;}cov_zwhhosepo.s[13]++;return result;};cov_zwhhosepo.s[14]++;var getSubInfo=function(message,patternStr,index){cov_zwhhosepo.f[1]++;let pattern=(cov_zwhhosepo.s[15]++,new RegExp(patternStr));let result=(cov_zwhhosepo.s[16]++,"");cov_zwhhosepo.s[17]++;if(message){cov_zwhhosepo.b[3][0]++;let _tmp=(cov_zwhhosepo.s[18]++,pattern.exec(message));cov_zwhhosepo.s[19]++;if((cov_zwhhosepo.b[5][0]++,_tmp)&&(cov_zwhhosepo.b[5][1]++,_tmp[index])){cov_zwhhosepo.b[4][0]++;cov_zwhhosepo.s[20]++;logger.debug("found match..:"+_tmp[index]);cov_zwhhosepo.s[21]++;result=_tmp[index];}else{cov_zwhhosepo.b[4][1]++;}}else{cov_zwhhosepo.b[3][1]++;}cov_zwhhosepo.s[22]++;return result;};cov_zwhhosepo.s[23]++;var getCommonData=function(payload){cov_zwhhosepo.f[2]++;cov_zwhhosepo.s[24]++;return new Promise((resolve,reject)=>{cov_zwhhosepo.f[3]++;let data=(cov_zwhhosepo.s[25]++,{});cov_zwhhosepo.s[26]++;data.metadata={};cov_zwhhosepo.s[27]++;data.request_id=getInfo(payload.logEvents,global_config.PATTERNS.Lambda_request_id);cov_zwhhosepo.s[28]++;if(data.request_id){cov_zwhhosepo.b[6][0]++;cov_zwhhosepo.s[29]++;data.provider="aws_lambda";let domainAndservice;cov_zwhhosepo.s[30]++;data.environment=getSubInfo(payload.logGroup,global_config.PATTERNS.Lambda_environment,2);cov_zwhhosepo.s[31]++;if(data.environment==="dev"){cov_zwhhosepo.b[7][0]++;let dev_environment=(cov_zwhhosepo.s[32]++,getSubInfo(payload.logGroup,global_config.PATTERNS.Lambda_environment_dev,2));cov_zwhhosepo.s[33]++;domainAndservice=getSubInfo(payload.logGroup,global_config.PATTERNS.Lambda_environment_dev,1);cov_zwhhosepo.s[34]++;data.environment=dev_environment;}else{cov_zwhhosepo.b[7][1]++;cov_zwhhosepo.s[35]++;domainAndservice=getSubInfo(payload.logGroup,global_config.PATTERNS.Lambda_domain_service,1);}let _namespace=(cov_zwhhosepo.s[36]++,domainAndservice.substring(0,domainAndservice.indexOf("_")));cov_zwhhosepo.s[37]++;if(_namespace){cov_zwhhosepo.b[8][0]++;cov_zwhhosepo.s[38]++;data.namespace=_namespace;cov_zwhhosepo.s[39]++;data.service=domainAndservice.substring(_namespace.length+1);}else{cov_zwhhosepo.b[8][1]++;cov_zwhhosepo.s[40]++;data.namespace="";cov_zwhhosepo.s[41]++;data.service=domainAndservice;}cov_zwhhosepo.s[42]++;data.metadata.platform_log_group=payload.logGroup;cov_zwhhosepo.s[43]++;data.metadata.platform_log_stream=payload.logStream;cov_zwhhosepo.s[44]++;resolve(data);}else{cov_zwhhosepo.b[6][1]++;cov_zwhhosepo.s[45]++;resolve(data);}});};cov_zwhhosepo.s[46]++;var transformApiLogs=function(payload){cov_zwhhosepo.f[4]++;cov_zwhhosepo.s[47]++;logger.info("Inside");cov_zwhhosepo.s[48]++;return new Promise((resolve,reject)=>{cov_zwhhosepo.f[5]++;let data=(cov_zwhhosepo.s[49]++,{}),bulkRequestBody=(cov_zwhhosepo.s[50]++,'');cov_zwhhosepo.s[51]++;data.metadata={};cov_zwhhosepo.s[52]++;data.event_timestamp=new Date();cov_zwhhosepo.s[53]++;data.provider="aws_apigateway";cov_zwhhosepo.s[54]++;data.metadata.platform_log_group=payload.logGroup;cov_zwhhosepo.s[55]++;data.metadata.platform_log_stream=payload.logStream;cov_zwhhosepo.s[56]++;data.environment=getSubInfo(payload.logGroup,global_config.PATTERNS.environment,2);cov_zwhhosepo.s[57]++;data.request_id=getInfo(payload.logEvents,global_config.PATTERNS.request_id);cov_zwhhosepo.s[58]++;data.metadata.method=getInfo(payload.logEvents,global_config.PATTERNS.method);cov_zwhhosepo.s[59]++;if(!data.metadata.method){cov_zwhhosepo.b[9][0]++;cov_zwhhosepo.s[60]++;// Cloudwatch do not have method info for get!
data.metadata.method="GET";}else{cov_zwhhosepo.b[9][1]++;}let apiDomainAndService=(cov_zwhhosepo.s[61]++,getInfo(payload.logEvents,global_config.PATTERNS.domain_service));let _apiDomain=(cov_zwhhosepo.s[62]++,apiDomainAndService.substring(0,apiDomainAndService.indexOf("/")));cov_zwhhosepo.s[63]++;if(_apiDomain){cov_zwhhosepo.b[10][0]++;cov_zwhhosepo.s[64]++;data.namespace=_apiDomain;cov_zwhhosepo.s[65]++;data.service=apiDomainAndService.substring(_apiDomain.length+1);}else{cov_zwhhosepo.b[10][1]++;cov_zwhhosepo.s[66]++;data.namespace="";cov_zwhhosepo.s[67]++;data.service=apiDomainAndService;}cov_zwhhosepo.s[68]++;data.metadata.path=getInfo(payload.logEvents,global_config.PATTERNS.path);cov_zwhhosepo.s[69]++;data.metadata.application_logs_id=getInfo(payload.logEvents,global_config.PATTERNS.lambda_ref_id);cov_zwhhosepo.s[70]++;if(!data.metadata.application_logs_id){cov_zwhhosepo.b[11][0]++;cov_zwhhosepo.s[71]++;data.metadata.application_logs_id="_incomplete_req";}else{cov_zwhhosepo.b[11][1]++;}let method_req_headers=(cov_zwhhosepo.s[72]++,getInfo(payload.logEvents,global_config.PATTERNS.method_req_headers));cov_zwhhosepo.s[73]++;data.metadata.origin=getSubInfo(method_req_headers,global_config.PATTERNS.origin,1);cov_zwhhosepo.s[74]++;data.metadata.host=getSubInfo(method_req_headers,global_config.PATTERNS.host,1);cov_zwhhosepo.s[75]++;if(!data.metadata.host){cov_zwhhosepo.b[12][0]++;cov_zwhhosepo.s[76]++;data.metadata.host="_incomplete_req";}else{cov_zwhhosepo.b[12][1]++;}cov_zwhhosepo.s[77]++;data.metadata.user_agent=getSubInfo(method_req_headers,global_config.PATTERNS.user_agent,1);cov_zwhhosepo.s[78]++;data.metadata.x_forwarded_port=getSubInfo(method_req_headers,global_config.PATTERNS.x_forwarded_port,1);cov_zwhhosepo.s[79]++;data.metadata.x_forwarded_for=getSubInfo(method_req_headers,global_config.PATTERNS.x_forwarded_for,1);cov_zwhhosepo.s[80]++;data.metadata.x_amzn_trace_id=getSubInfo(method_req_headers,global_config.PATTERNS.x_amzn_trace_id,1);cov_zwhhosepo.s[81]++;data.metadata.content_type=getSubInfo(method_req_headers,global_config.PATTERNS.content_type,1);cov_zwhhosepo.s[82]++;data.metadata.cache_control=getSubInfo(method_req_headers,global_config.PATTERNS.cache_control,1);cov_zwhhosepo.s[83]++;data.log_level="INFO";// Default to INFO for apilogs
cov_zwhhosepo.s[84]++;data.metadata.status=getInfo(payload.logEvents,global_config.PATTERNS.status);cov_zwhhosepo.s[85]++;console.log(data);cov_zwhhosepo.s[86]++;if((cov_zwhhosepo.b[14][0]++,data.request_id)&&(cov_zwhhosepo.b[14][1]++,data.service)){cov_zwhhosepo.b[13][0]++;cov_zwhhosepo.s[87]++;bulkRequestBody={sourcetype:"apilogs",event:data};cov_zwhhosepo.s[88]++;logger.debug("Splunk payload for API Gateway LogEvent:"+JSON.stringify(bulkRequestBody));cov_zwhhosepo.s[89]++;resolve(bulkRequestBody);}else{cov_zwhhosepo.b[13][1]++;cov_zwhhosepo.s[90]++;logger.error("Invalid api logs event..: "+JSON.stringify(payload));cov_zwhhosepo.s[91]++;reject({result:"inputError",message:"Invalid api logs event."});}});};cov_zwhhosepo.s[92]++;var transformLambdaLogs=function(logEvent,commonData){cov_zwhhosepo.f[6]++;cov_zwhhosepo.s[93]++;return new Promise((resolve,reject)=>{cov_zwhhosepo.f[7]++;cov_zwhhosepo.s[94]++;if((cov_zwhhosepo.b[16][0]++,Object.keys(commonData).length)&&(cov_zwhhosepo.b[16][1]++,commonData.service)){cov_zwhhosepo.b[15][0]++;cov_zwhhosepo.s[95]++;try{let data=(cov_zwhhosepo.s[96]++,{});cov_zwhhosepo.s[97]++;data.metadata={};cov_zwhhosepo.s[98]++;Object.keys(commonData).forEach(key=>{cov_zwhhosepo.f[8]++;cov_zwhhosepo.s[99]++;data[key]=commonData[key];});cov_zwhhosepo.s[100]++;data.request_id=getSubInfo(logEvent.message,global_config.PATTERNS.guid_regex,0);cov_zwhhosepo.s[101]++;data.event_timestamp=new Date(1*logEvent.timestamp).toISOString();let message=(cov_zwhhosepo.s[102]++,logEvent.message);let messageLength=(cov_zwhhosepo.s[103]++,Buffer.byteLength(message,'utf8'));cov_zwhhosepo.s[104]++;if(messageLength>32766){cov_zwhhosepo.b[17][0]++;//since 32766(32KB) is the default message size
let truncatedMessage=(cov_zwhhosepo.s[105]++,truncate(message,32740));// message size + ...[TRUNCATED]
cov_zwhhosepo.s[106]++;data.message=truncatedMessage+"  ...[TRUNCATED]";}else{cov_zwhhosepo.b[17][1]++;cov_zwhhosepo.s[107]++;data.message=message;}cov_zwhhosepo.s[108]++;data.log_level=getSubInfo(logEvent.message,global_config.PATTERNS.log_level,0);cov_zwhhosepo.s[109]++;if(!data.log_level){cov_zwhhosepo.b[18][0]++;cov_zwhhosepo.s[110]++;data.log_level=global_config.DEFAULT_LOG_LEVEL;}else{cov_zwhhosepo.b[18][1]++;}cov_zwhhosepo.s[111]++;if(!((cov_zwhhosepo.b[20][0]++,data.message.startsWith("REPORT"))||(cov_zwhhosepo.b[20][1]++,data.message.startsWith("START"))||(cov_zwhhosepo.b[20][2]++,data.message.startsWith("END")))){cov_zwhhosepo.b[19][0]++;let timestmp=(cov_zwhhosepo.s[112]++,getSubInfo(data.message,global_config.PATTERNS.timestamp_pattern,0));cov_zwhhosepo.s[113]++;data.message=data.message.replace(timestmp,"");let guid=(cov_zwhhosepo.s[114]++,getSubInfo(data.message,global_config.PATTERNS.guid_regex,0));cov_zwhhosepo.s[115]++;data.message=data.message.replace(guid,"");cov_zwhhosepo.s[116]++;data.message=data.message.replace(data.log_level,"");}else{cov_zwhhosepo.b[19][1]++;}cov_zwhhosepo.s[117]++;data.message=data.message.trim();let bulkRequestBody=(cov_zwhhosepo.s[118]++,{sourcetype:"applicationlogs",event:data});cov_zwhhosepo.s[119]++;logger.debug("Splunk payload for Lambda LogEvent:"+JSON.stringify(bulkRequestBody));cov_zwhhosepo.s[120]++;resolve(bulkRequestBody);}catch(e){cov_zwhhosepo.s[121]++;logger.error(error);}}else{cov_zwhhosepo.b[15][1]++;cov_zwhhosepo.s[122]++;logger.error("Invalid lambda logs event.");cov_zwhhosepo.s[123]++;reject({result:"inputError",message:"Invalid lambda logs event."});}});};cov_zwhhosepo.s[124]++;module.exports={getCommonData,transformApiLogs,transformLambdaLogs};