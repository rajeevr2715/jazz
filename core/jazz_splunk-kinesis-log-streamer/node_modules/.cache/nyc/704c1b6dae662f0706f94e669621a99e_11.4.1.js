/**
	Custom Splunk cloudWatch logs streamer.
	@Author:
	@version: 1.0
**/'use strict';var cov_1sdtf28ve0=function(){var path='/Users/supritast/Work/T-Mobile/CAP/jazz_splunk-cw-log-streamer/index.js',hash='3c79fc168d34ef848a9ebbfa3e67eb835adf052a',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/supritast/Work/T-Mobile/CAP/jazz_splunk-cw-log-streamer/index.js',statementMap:{'0':{start:{line:9,column:21},end:{line:9,column:53}},'1':{start:{line:10,column:13},end:{line:10,column:28}},'2':{start:{line:11,column:19},end:{line:11,column:52}},'3':{start:{line:12,column:15},end:{line:12,column:48}},'4':{start:{line:13,column:27},end:{line:13,column:67}},'5':{start:{line:14,column:20},end:{line:14,column:55}},'6':{start:{line:15,column:14},end:{line:15,column:46}},'7':{start:{line:18,column:0},end:{line:18,column:47}},'8':{start:{line:22,column:2},end:{line:22,column:58}},'9':{start:{line:23,column:21},end:{line:23,column:41}},'10':{start:{line:24,column:15},end:{line:24,column:51}},'11':{start:{line:26,column:23},end:{line:31,column:3}},'12':{start:{line:33,column:20},end:{line:33,column:50}},'13':{start:{line:35,column:2},end:{line:38,column:4}},'14':{start:{line:36,column:4},end:{line:36,column:76}},'15':{start:{line:37,column:4},end:{line:37,column:43}},'16':{start:{line:40,column:2},end:{line:81,column:3}},'17':{start:{line:42,column:20},end:{line:42,column:60}},'18':{start:{line:45,column:4},end:{line:77,column:7}},'19':{start:{line:46,column:6},end:{line:76,column:7}},'20':{start:{line:47,column:8},end:{line:47,column:28}},'21':{start:{line:48,column:8},end:{line:48,column:101}},'22':{start:{line:51,column:26},end:{line:51,column:62}},'23':{start:{line:52,column:8},end:{line:52,column:70}},'24':{start:{line:53,column:8},end:{line:75,column:13}},'25':{start:{line:55,column:12},end:{line:66,column:15}},'26':{start:{line:57,column:14},end:{line:65,column:15}},'27':{start:{line:58,column:16},end:{line:58,column:68}},'28':{start:{line:62,column:16},end:{line:62,column:76}},'29':{start:{line:63,column:16},end:{line:63,column:77}},'30':{start:{line:64,column:16},end:{line:64,column:45}},'31':{start:{line:69,column:12},end:{line:69,column:48}},'32':{start:{line:70,column:12},end:{line:74,column:13}},'33':{start:{line:71,column:14},end:{line:71,column:101}},'34':{start:{line:73,column:14},end:{line:73,column:114}},'35':{start:{line:79,column:4},end:{line:79,column:47}},'36':{start:{line:80,column:4},end:{line:80,column:104}},'37':{start:{line:85,column:2},end:{line:128,column:5}},'38':{start:{line:86,column:16},end:{line:86,column:17}},'39':{start:{line:87,column:4},end:{line:127,column:5}},'40':{start:{line:88,column:6},end:{line:88,column:48}},'41':{start:{line:89,column:6},end:{line:89,column:25}},'42':{start:{line:90,column:11},end:{line:127,column:5}},'43':{start:{line:91,column:6},end:{line:100,column:11}},'44':{start:{line:93,column:10},end:{line:93,column:73}},'45':{start:{line:94,column:10},end:{line:94,column:18}},'46':{start:{line:95,column:10},end:{line:95,column:25}},'47':{start:{line:98,column:10},end:{line:98,column:30}},'48':{start:{line:99,column:10},end:{line:99,column:24}},'49':{start:{line:101,column:11},end:{line:127,column:5}},'50':{start:{line:102,column:6},end:{line:119,column:9}},'51':{start:{line:104,column:8},end:{line:104,column:64}},'52':{start:{line:105,column:8},end:{line:118,column:11}},'53':{start:{line:106,column:10},end:{line:117,column:15}},'54':{start:{line:108,column:14},end:{line:108,column:68}},'55':{start:{line:109,column:14},end:{line:109,column:22}},'56':{start:{line:110,column:14},end:{line:112,column:15}},'57':{start:{line:111,column:16},end:{line:111,column:31}},'58':{start:{line:115,column:14},end:{line:115,column:80}},'59':{start:{line:116,column:14},end:{line:116,column:28}},'60':{start:{line:122,column:6},end:{line:122,column:53}},'61':{start:{line:123,column:6},end:{line:126,column:9}},'62':{start:{line:132,column:2},end:{line:132,column:63}},'63':{start:{line:133,column:16},end:{line:137,column:3}},'64':{start:{line:138,column:2},end:{line:138,column:26}},'65':{start:{line:141,column:19},end:{line:145,column:1}},'66':{start:{line:146,column:0},end:{line:146,column:28}}},fnMap:{'0':{name:'handler',decl:{start:{line:20,column:9},end:{line:20,column:16}},loc:{start:{line:20,column:42},end:{line:82,column:1}},line:20},'1':{name:'(anonymous_1)',decl:{start:{line:35,column:20},end:{line:35,column:21}},loc:{start:{line:35,column:40},end:{line:38,column:3}},line:35},'2':{name:'(anonymous_2)',decl:{start:{line:45,column:25},end:{line:45,column:26}},loc:{start:{line:45,column:44},end:{line:77,column:5}},line:45},'3':{name:'(anonymous_3)',decl:{start:{line:54,column:16},end:{line:54,column:17}},loc:{start:{line:54,column:27},end:{line:67,column:11}},line:54},'4':{name:'(anonymous_4)',decl:{start:{line:55,column:28},end:{line:55,column:29}},loc:{start:{line:55,column:49},end:{line:66,column:13}},line:55},'5':{name:'(anonymous_5)',decl:{start:{line:68,column:17},end:{line:68,column:18}},loc:{start:{line:68,column:26},end:{line:75,column:11}},line:68},'6':{name:'sendSplunkEvent',decl:{start:{line:84,column:9},end:{line:84,column:24}},loc:{start:{line:84,column:57},end:{line:129,column:1}},line:84},'7':{name:'(anonymous_7)',decl:{start:{line:85,column:21},end:{line:85,column:22}},loc:{start:{line:85,column:42},end:{line:128,column:3}},line:85},'8':{name:'(anonymous_8)',decl:{start:{line:92,column:14},end:{line:92,column:15}},loc:{start:{line:92,column:32},end:{line:96,column:9}},line:92},'9':{name:'(anonymous_9)',decl:{start:{line:97,column:15},end:{line:97,column:16}},loc:{start:{line:97,column:24},end:{line:100,column:9}},line:97},'10':{name:'(anonymous_10)',decl:{start:{line:103,column:12},end:{line:103,column:13}},loc:{start:{line:103,column:26},end:{line:119,column:7}},line:103},'11':{name:'(anonymous_11)',decl:{start:{line:105,column:38},end:{line:105,column:39}},loc:{start:{line:105,column:50},end:{line:118,column:9}},line:105},'12':{name:'(anonymous_12)',decl:{start:{line:107,column:18},end:{line:107,column:19}},loc:{start:{line:107,column:27},end:{line:113,column:13}},line:107},'13':{name:'(anonymous_13)',decl:{start:{line:114,column:19},end:{line:114,column:20}},loc:{start:{line:114,column:28},end:{line:117,column:13}},line:114},'14':{name:'sendDataToSplunk',decl:{start:{line:131,column:9},end:{line:131,column:25}},loc:{start:{line:131,column:56},end:{line:139,column:1}},line:131}},branchMap:{'0':{loc:{start:{line:46,column:6},end:{line:76,column:7}},type:'if',locations:[{start:{line:46,column:6},end:{line:76,column:7}},{start:{line:46,column:6},end:{line:76,column:7}}],line:46},'1':{loc:{start:{line:57,column:14},end:{line:65,column:15}},type:'if',locations:[{start:{line:57,column:14},end:{line:65,column:15}},{start:{line:57,column:14},end:{line:65,column:15}}],line:57},'2':{loc:{start:{line:57,column:18},end:{line:57,column:50}},type:'binary-expr',locations:[{start:{line:57,column:18},end:{line:57,column:21}},{start:{line:57,column:26},end:{line:57,column:30}},{start:{line:57,column:34},end:{line:57,column:49}}],line:57},'3':{loc:{start:{line:70,column:12},end:{line:74,column:13}},type:'if',locations:[{start:{line:70,column:12},end:{line:74,column:13}},{start:{line:70,column:12},end:{line:74,column:13}}],line:70},'4':{loc:{start:{line:87,column:4},end:{line:127,column:5}},type:'if',locations:[{start:{line:87,column:4},end:{line:127,column:5}},{start:{line:87,column:4},end:{line:127,column:5}}],line:87},'5':{loc:{start:{line:90,column:11},end:{line:127,column:5}},type:'if',locations:[{start:{line:90,column:11},end:{line:127,column:5}},{start:{line:90,column:11},end:{line:127,column:5}}],line:90},'6':{loc:{start:{line:101,column:11},end:{line:127,column:5}},type:'if',locations:[{start:{line:101,column:11},end:{line:127,column:5}},{start:{line:101,column:11},end:{line:127,column:5}}],line:101},'7':{loc:{start:{line:110,column:14},end:{line:112,column:15}},type:'if',locations:[{start:{line:110,column:14},end:{line:112,column:15}},{start:{line:110,column:14},end:{line:112,column:15}}],line:110}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0,'65':0,'66':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0},b:{'0':[0,0],'1':[0,0],'2':[0,0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const SplunkLogger=(cov_1sdtf28ve0.s[0]++,require('splunk-logging').Logger);const zlib=(cov_1sdtf28ve0.s[1]++,require('zlib'));const configData=(cov_1sdtf28ve0.s[2]++,require("./components/config.js"));//Import the environment data.
const logger=(cov_1sdtf28ve0.s[3]++,require("./components/logger.js"));//Import the logging module.
const errorHandlerModule=(cov_1sdtf28ve0.s[4]++,require("./components/error-handler.js"));const responseObj=(cov_1sdtf28ve0.s[5]++,require("./components/response.js"));const utils=(cov_1sdtf28ve0.s[6]++,require("./components/utils.js"));//Import the utils module.
cov_1sdtf28ve0.s[7]++;process.env.NODE_TLS_REJECT_UNAUTHORIZED="0";function handler(event,context,callback){cov_1sdtf28ve0.f[0]++;cov_1sdtf28ve0.s[8]++;logger.debug('Received event:'+JSON.stringify(event));let errorHandler=(cov_1sdtf28ve0.s[9]++,errorHandlerModule());let config=(cov_1sdtf28ve0.s[10]++,configData.getConfig(event,context));const loggerConfig=(cov_1sdtf28ve0.s[11]++,{url:config.SPLUNK_ENDPOINT,token:config.SPLUNK_TOKEN,maxBatchCount:0,// Manually flush events
maxRetries:1// Retry 1 times
});const splunkLog=(cov_1sdtf28ve0.s[12]++,new SplunkLogger(loggerConfig));// Set common error handler for splunkLog.send() and splunkLog.flush()
cov_1sdtf28ve0.s[13]++;splunkLog.error=(error,context)=>{cov_1sdtf28ve0.f[1]++;cov_1sdtf28ve0.s[14]++;logger.error('error:'+error+', context:'+JSON.stringify(context));cov_1sdtf28ve0.s[15]++;return callback(JSON.stringify(error));};cov_1sdtf28ve0.s[16]++;try{// CloudWatch Logs data is base64 encoded so decode here
const payload=(cov_1sdtf28ve0.s[17]++,new Buffer(event.awslogs.data,'base64'));// CloudWatch Logs are gzip compressed so expand here
cov_1sdtf28ve0.s[18]++;zlib.gunzip(payload,(error,result)=>{cov_1sdtf28ve0.f[2]++;cov_1sdtf28ve0.s[19]++;if(error){cov_1sdtf28ve0.b[0][0]++;cov_1sdtf28ve0.s[20]++;logger.error(error);cov_1sdtf28ve0.s[21]++;return callback(JSON.stringify(errorHandler.throwInputValidationError("Not a valid Input")));}else{cov_1sdtf28ve0.b[0][1]++;// parse the result from JSON
let awslogsData=(cov_1sdtf28ve0.s[22]++,JSON.parse(result.toString('ascii')));cov_1sdtf28ve0.s[23]++;logger.info('Decoded payload:'+JSON.stringify(awslogsData));cov_1sdtf28ve0.s[24]++;exportable.sendSplunkEvent(awslogsData,splunkLog,config).then(count=>{cov_1sdtf28ve0.f[3]++;cov_1sdtf28ve0.s[25]++;splunkLog.flush((err,resp,body)=>{cov_1sdtf28ve0.f[4]++;cov_1sdtf28ve0.s[26]++;// Request failure or valid response from Splunk with HEC error code
if((cov_1sdtf28ve0.b[2][0]++,err)||(cov_1sdtf28ve0.b[2][1]++,body)&&(cov_1sdtf28ve0.b[2][2]++,body.code!==0)){cov_1sdtf28ve0.b[1][0]++;cov_1sdtf28ve0.s[27]++;logger.error("Splunk error:"+JSON.stringify(err));// If failed, error will be handled by pre-configured logger.error() below
}else{cov_1sdtf28ve0.b[1][1]++;cov_1sdtf28ve0.s[28]++;// If succeeded, body will be { text: 'Success', code: 0 }
logger.info('Response from Splunk:'+JSON.stringify(body));cov_1sdtf28ve0.s[29]++;logger.info(`Successfully processed ${count} log event(s).`);cov_1sdtf28ve0.s[30]++;return callback(null,count);// Return number of log events
}});}).catch(error=>{cov_1sdtf28ve0.f[5]++;cov_1sdtf28ve0.s[31]++;logger.error(JSON.stringify(error));cov_1sdtf28ve0.s[32]++;if(error.result==='inputError'){cov_1sdtf28ve0.b[3][0]++;cov_1sdtf28ve0.s[33]++;return callback(JSON.stringify(errorHandler.throwInputValidationError(error.message)));}else{cov_1sdtf28ve0.b[3][1]++;cov_1sdtf28ve0.s[34]++;return callback(JSON.stringify(errorHandler.throwInternalServerError('Unexpected error occured.')));}});}});}catch(e){cov_1sdtf28ve0.s[35]++;logger.error("Error:"+JSON.stringify(e));cov_1sdtf28ve0.s[36]++;return callback(JSON.stringify(errorHandler.throwInternalServerError('Unexpected error occured.')));}}function sendSplunkEvent(awslogsData,splunkLog,config){cov_1sdtf28ve0.f[6]++;cov_1sdtf28ve0.s[37]++;return new Promise((resolve,reject)=>{cov_1sdtf28ve0.f[7]++;let count=(cov_1sdtf28ve0.s[38]++,0);cov_1sdtf28ve0.s[39]++;if(awslogsData.messageType==='CONTROL_MESSAGE'){cov_1sdtf28ve0.b[4][0]++;cov_1sdtf28ve0.s[40]++;logger.debug('Received CONTROL MESSAGE.');cov_1sdtf28ve0.s[41]++;resolve("Success");}else{cov_1sdtf28ve0.b[4][1]++;cov_1sdtf28ve0.s[42]++;if(awslogsData.logGroup.indexOf("API-Gateway-Execution-Logs")===0){cov_1sdtf28ve0.b[5][0]++;cov_1sdtf28ve0.s[43]++;utils.transformApiLogs(awslogsData).then(splunkBulkData=>{cov_1sdtf28ve0.f[8]++;cov_1sdtf28ve0.s[44]++;exportable.sendDataToSplunk(splunkLog,splunkBulkData,config);cov_1sdtf28ve0.s[45]++;count++;cov_1sdtf28ve0.s[46]++;resolve(count);}).catch(error=>{cov_1sdtf28ve0.f[9]++;cov_1sdtf28ve0.s[47]++;logger.error(error);cov_1sdtf28ve0.s[48]++;reject(error);});}else{cov_1sdtf28ve0.b[5][1]++;cov_1sdtf28ve0.s[49]++;if(awslogsData.logGroup.indexOf("/aws/lambda/")===0){cov_1sdtf28ve0.b[6][0]++;cov_1sdtf28ve0.s[50]++;utils.getCommonData(awslogsData).then(commonData=>{cov_1sdtf28ve0.f[10]++;cov_1sdtf28ve0.s[51]++;logger.info("commonData: "+JSON.stringify(commonData));cov_1sdtf28ve0.s[52]++;awslogsData.logEvents.forEach(logEvent=>{cov_1sdtf28ve0.f[11]++;cov_1sdtf28ve0.s[53]++;utils.transformLambdaLogs(logEvent,commonData).then(event=>{cov_1sdtf28ve0.f[12]++;cov_1sdtf28ve0.s[54]++;exportable.sendDataToSplunk(splunkLog,event,config);cov_1sdtf28ve0.s[55]++;count++;cov_1sdtf28ve0.s[56]++;if(count===awslogsData.logEvents.length){cov_1sdtf28ve0.b[7][0]++;cov_1sdtf28ve0.s[57]++;resolve(count);}else{cov_1sdtf28ve0.b[7][1]++;}}).catch(error=>{cov_1sdtf28ve0.f[13]++;cov_1sdtf28ve0.s[58]++;logger.error("Error in sendSplunkEvent:"+JSON.stringify(error));cov_1sdtf28ve0.s[59]++;reject(error);});});});}else{cov_1sdtf28ve0.b[6][1]++;cov_1sdtf28ve0.s[60]++;logger.error('Received unsupported logEvents');cov_1sdtf28ve0.s[61]++;reject({result:"inputError",message:"Received unsupported logEvents"});}}}});}function sendDataToSplunk(splunkLog,eventData,config){cov_1sdtf28ve0.f[14]++;cov_1sdtf28ve0.s[62]++;logger.debug("Send event data:"+JSON.stringify(eventData));let payload=(cov_1sdtf28ve0.s[63]++,{sourcetype:eventData.sourcetype,index:config.SPLUNK_INDEX,event:eventData.event});cov_1sdtf28ve0.s[64]++;splunkLog.send(payload);}const exportable=(cov_1sdtf28ve0.s[65]++,{handler,sendSplunkEvent,sendDataToSplunk});cov_1sdtf28ve0.s[66]++;module.exports=exportable;