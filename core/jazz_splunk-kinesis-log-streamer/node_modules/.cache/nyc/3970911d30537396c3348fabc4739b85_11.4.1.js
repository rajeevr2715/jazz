/**
	Custom Splunk cloudWatch logs streamer.
	@Author:
	@version: 1.0
**/'use strict';var cov_1sdtf28ve0=function(){var path='/Users/supritast/Work/T-Mobile/CAP/jazz_splunk-cw-log-streamer/index.js',hash='2e5fcf916c5c906b71cf8b99bf7dd712b9e296f8',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/supritast/Work/T-Mobile/CAP/jazz_splunk-cw-log-streamer/index.js',statementMap:{'0':{start:{line:9,column:21},end:{line:9,column:53}},'1':{start:{line:10,column:13},end:{line:10,column:28}},'2':{start:{line:11,column:19},end:{line:11,column:52}},'3':{start:{line:12,column:15},end:{line:12,column:48}},'4':{start:{line:13,column:27},end:{line:13,column:67}},'5':{start:{line:14,column:20},end:{line:14,column:55}},'6':{start:{line:15,column:14},end:{line:15,column:46}},'7':{start:{line:16,column:22},end:{line:16,column:60}},'8':{start:{line:18,column:0},end:{line:18,column:47}},'9':{start:{line:22,column:2},end:{line:22,column:57}},'10':{start:{line:23,column:21},end:{line:23,column:41}},'11':{start:{line:24,column:15},end:{line:24,column:51}},'12':{start:{line:26,column:2},end:{line:93,column:3}},'13':{start:{line:27,column:25},end:{line:32,column:5}},'14':{start:{line:34,column:22},end:{line:34,column:52}},'15':{start:{line:36,column:4},end:{line:39,column:6}},'16':{start:{line:37,column:6},end:{line:37,column:78}},'17':{start:{line:38,column:6},end:{line:38,column:45}},'18':{start:{line:41,column:4},end:{line:89,column:5}},'19':{start:{line:43,column:6},end:{line:84,column:9}},'20':{start:{line:45,column:22},end:{line:45,column:67}},'21':{start:{line:46,column:8},end:{line:46,column:58}},'22':{start:{line:49,column:8},end:{line:83,column:11}},'23':{start:{line:50,column:10},end:{line:82,column:11}},'24':{start:{line:51,column:12},end:{line:51,column:72}},'25':{start:{line:52,column:12},end:{line:52,column:45}},'26':{start:{line:55,column:30},end:{line:55,column:66}},'27':{start:{line:56,column:12},end:{line:56,column:74}},'28':{start:{line:57,column:12},end:{line:81,column:17}},'29':{start:{line:59,column:16},end:{line:74,column:17}},'30':{start:{line:60,column:18},end:{line:71,column:21}},'31':{start:{line:62,column:20},end:{line:70,column:21}},'32':{start:{line:63,column:22},end:{line:63,column:74}},'33':{start:{line:64,column:22},end:{line:64,column:67}},'34':{start:{line:67,column:22},end:{line:67,column:82}},'35':{start:{line:68,column:22},end:{line:68,column:83}},'36':{start:{line:69,column:22},end:{line:69,column:51}},'37':{start:{line:73,column:18},end:{line:73,column:51}},'38':{start:{line:78,column:16},end:{line:78,column:43}},'39':{start:{line:79,column:16},end:{line:79,column:52}},'40':{start:{line:80,column:16},end:{line:80,column:49}},'41':{start:{line:87,column:6},end:{line:87,column:49}},'42':{start:{line:88,column:6},end:{line:88,column:39}},'43':{start:{line:91,column:4},end:{line:91,column:50}},'44':{start:{line:92,column:4},end:{line:92,column:37}},'45':{start:{line:97,column:2},end:{line:136,column:5}},'46':{start:{line:98,column:16},end:{line:98,column:17}},'47':{start:{line:99,column:4},end:{line:135,column:5}},'48':{start:{line:100,column:6},end:{line:100,column:48}},'49':{start:{line:101,column:6},end:{line:101,column:16}},'50':{start:{line:102,column:11},end:{line:135,column:5}},'51':{start:{line:103,column:6},end:{line:112,column:11}},'52':{start:{line:105,column:10},end:{line:105,column:73}},'53':{start:{line:106,column:10},end:{line:106,column:18}},'54':{start:{line:107,column:10},end:{line:107,column:25}},'55':{start:{line:110,column:10},end:{line:110,column:30}},'56':{start:{line:111,column:10},end:{line:111,column:20}},'57':{start:{line:113,column:11},end:{line:135,column:5}},'58':{start:{line:114,column:6},end:{line:130,column:9}},'59':{start:{line:116,column:8},end:{line:129,column:11}},'60':{start:{line:117,column:10},end:{line:128,column:15}},'61':{start:{line:119,column:14},end:{line:119,column:68}},'62':{start:{line:120,column:14},end:{line:120,column:22}},'63':{start:{line:121,column:14},end:{line:123,column:15}},'64':{start:{line:122,column:16},end:{line:122,column:31}},'65':{start:{line:126,column:14},end:{line:126,column:80}},'66':{start:{line:127,column:14},end:{line:127,column:24}},'67':{start:{line:133,column:6},end:{line:133,column:53}},'68':{start:{line:134,column:6},end:{line:134,column:16}},'69':{start:{line:140,column:2},end:{line:140,column:63}},'70':{start:{line:141,column:16},end:{line:147,column:3}},'71':{start:{line:148,column:2},end:{line:148,column:26}},'72':{start:{line:151,column:19},end:{line:155,column:1}},'73':{start:{line:156,column:0},end:{line:156,column:28}}},fnMap:{'0':{name:'handler',decl:{start:{line:20,column:9},end:{line:20,column:16}},loc:{start:{line:20,column:42},end:{line:94,column:1}},line:20},'1':{name:'(anonymous_1)',decl:{start:{line:36,column:22},end:{line:36,column:23}},loc:{start:{line:36,column:42},end:{line:39,column:5}},line:36},'2':{name:'(anonymous_2)',decl:{start:{line:43,column:28},end:{line:43,column:29}},loc:{start:{line:43,column:42},end:{line:84,column:7}},line:43},'3':{name:'(anonymous_3)',decl:{start:{line:49,column:29},end:{line:49,column:30}},loc:{start:{line:49,column:48},end:{line:83,column:9}},line:49},'4':{name:'(anonymous_4)',decl:{start:{line:58,column:20},end:{line:58,column:21}},loc:{start:{line:58,column:31},end:{line:76,column:15}},line:58},'5':{name:'(anonymous_5)',decl:{start:{line:60,column:34},end:{line:60,column:35}},loc:{start:{line:60,column:55},end:{line:71,column:19}},line:60},'6':{name:'(anonymous_6)',decl:{start:{line:77,column:21},end:{line:77,column:22}},loc:{start:{line:77,column:30},end:{line:81,column:15}},line:77},'7':{name:'sendSplunkEvent',decl:{start:{line:96,column:9},end:{line:96,column:24}},loc:{start:{line:96,column:57},end:{line:137,column:1}},line:96},'8':{name:'(anonymous_8)',decl:{start:{line:97,column:21},end:{line:97,column:22}},loc:{start:{line:97,column:42},end:{line:136,column:3}},line:97},'9':{name:'(anonymous_9)',decl:{start:{line:104,column:14},end:{line:104,column:15}},loc:{start:{line:104,column:32},end:{line:108,column:9}},line:104},'10':{name:'(anonymous_10)',decl:{start:{line:109,column:15},end:{line:109,column:16}},loc:{start:{line:109,column:24},end:{line:112,column:9}},line:109},'11':{name:'(anonymous_11)',decl:{start:{line:115,column:12},end:{line:115,column:13}},loc:{start:{line:115,column:26},end:{line:130,column:7}},line:115},'12':{name:'(anonymous_12)',decl:{start:{line:116,column:38},end:{line:116,column:39}},loc:{start:{line:116,column:50},end:{line:129,column:9}},line:116},'13':{name:'(anonymous_13)',decl:{start:{line:118,column:18},end:{line:118,column:19}},loc:{start:{line:118,column:27},end:{line:124,column:13}},line:118},'14':{name:'(anonymous_14)',decl:{start:{line:125,column:19},end:{line:125,column:20}},loc:{start:{line:125,column:28},end:{line:128,column:13}},line:125},'15':{name:'sendDataToSplunk',decl:{start:{line:139,column:9},end:{line:139,column:25}},loc:{start:{line:139,column:56},end:{line:149,column:1}},line:139}},branchMap:{'0':{loc:{start:{line:26,column:2},end:{line:93,column:3}},type:'if',locations:[{start:{line:26,column:2},end:{line:93,column:3}},{start:{line:26,column:2},end:{line:93,column:3}}],line:26},'1':{loc:{start:{line:26,column:6},end:{line:26,column:74}},type:'binary-expr',locations:[{start:{line:26,column:6},end:{line:26,column:33}},{start:{line:26,column:37},end:{line:26,column:50}},{start:{line:26,column:54},end:{line:26,column:74}}],line:26},'2':{loc:{start:{line:50,column:10},end:{line:82,column:11}},type:'if',locations:[{start:{line:50,column:10},end:{line:82,column:11}},{start:{line:50,column:10},end:{line:82,column:11}}],line:50},'3':{loc:{start:{line:59,column:16},end:{line:74,column:17}},type:'if',locations:[{start:{line:59,column:16},end:{line:74,column:17}},{start:{line:59,column:16},end:{line:74,column:17}}],line:59},'4':{loc:{start:{line:62,column:20},end:{line:70,column:21}},type:'if',locations:[{start:{line:62,column:20},end:{line:70,column:21}},{start:{line:62,column:20},end:{line:70,column:21}}],line:62},'5':{loc:{start:{line:62,column:24},end:{line:62,column:56}},type:'binary-expr',locations:[{start:{line:62,column:24},end:{line:62,column:27}},{start:{line:62,column:32},end:{line:62,column:36}},{start:{line:62,column:40},end:{line:62,column:55}}],line:62},'6':{loc:{start:{line:64,column:53},end:{line:64,column:64}},type:'binary-expr',locations:[{start:{line:64,column:53},end:{line:64,column:56}},{start:{line:64,column:60},end:{line:64,column:64}}],line:64},'7':{loc:{start:{line:99,column:4},end:{line:135,column:5}},type:'if',locations:[{start:{line:99,column:4},end:{line:135,column:5}},{start:{line:99,column:4},end:{line:135,column:5}}],line:99},'8':{loc:{start:{line:102,column:11},end:{line:135,column:5}},type:'if',locations:[{start:{line:102,column:11},end:{line:135,column:5}},{start:{line:102,column:11},end:{line:135,column:5}}],line:102},'9':{loc:{start:{line:113,column:11},end:{line:135,column:5}},type:'if',locations:[{start:{line:113,column:11},end:{line:135,column:5}},{start:{line:113,column:11},end:{line:135,column:5}}],line:113},'10':{loc:{start:{line:121,column:14},end:{line:123,column:15}},type:'if',locations:[{start:{line:121,column:14},end:{line:123,column:15}},{start:{line:121,column:14},end:{line:123,column:15}}],line:121}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0,'65':0,'66':0,'67':0,'68':0,'69':0,'70':0,'71':0,'72':0,'73':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0},b:{'0':[0,0],'1':[0,0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0],'10':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const SplunkLogger=(cov_1sdtf28ve0.s[0]++,require('splunk-logging').Logger);const zlib=(cov_1sdtf28ve0.s[1]++,require('zlib'));const configData=(cov_1sdtf28ve0.s[2]++,require("./components/config.js"));//Import the environment data.
const logger=(cov_1sdtf28ve0.s[3]++,require("./components/logger.js"));//Import the logging module.
const errorHandlerModule=(cov_1sdtf28ve0.s[4]++,require("./components/error-handler.js"));const responseObj=(cov_1sdtf28ve0.s[5]++,require("./components/response.js"));const utils=(cov_1sdtf28ve0.s[6]++,require("./components/utils.js"));//Import the utils module.
const global_config=(cov_1sdtf28ve0.s[7]++,require("./config/global-config.json"));cov_1sdtf28ve0.s[8]++;process.env.NODE_TLS_REJECT_UNAUTHORIZED="0";function handler(event,context,callback){cov_1sdtf28ve0.f[0]++;cov_1sdtf28ve0.s[9]++;logger.info('Received event:'+JSON.stringify(event));let errorHandler=(cov_1sdtf28ve0.s[10]++,errorHandlerModule());let config=(cov_1sdtf28ve0.s[11]++,configData.getConfig(event,context));cov_1sdtf28ve0.s[12]++;if((cov_1sdtf28ve0.b[1][0]++,global_config.ENABLE_SPLUNK)&&(cov_1sdtf28ve0.b[1][1]++,event.Records)&&(cov_1sdtf28ve0.b[1][2]++,event.Records.length)){cov_1sdtf28ve0.b[0][0]++;const loggerConfig=(cov_1sdtf28ve0.s[13]++,{url:config.SPLUNK_ENDPOINT,token:config.SPLUNK_TOKEN,maxBatchCount:0,// Manually flush events
maxRetries:1// Retry 1 times
});const splunkLog=(cov_1sdtf28ve0.s[14]++,new SplunkLogger(loggerConfig));// Set common error handler for splunkLog.send() and splunkLog.flush()
cov_1sdtf28ve0.s[15]++;splunkLog.error=(error,context)=>{cov_1sdtf28ve0.f[1]++;cov_1sdtf28ve0.s[16]++;logger.error('error:'+error+', context:'+JSON.stringify(context));cov_1sdtf28ve0.s[17]++;return callback(JSON.stringify(error));};cov_1sdtf28ve0.s[18]++;try{cov_1sdtf28ve0.s[19]++;event.Records.forEach(eachRecord=>{cov_1sdtf28ve0.f[2]++;// CloudWatch Logs data is base64 encoded so decode here
let payload=(cov_1sdtf28ve0.s[20]++,new Buffer(eachRecord.kinesis.data,'base64'));cov_1sdtf28ve0.s[21]++;logger.info("payload:"+JSON.stringify(payload));// CloudWatch Logs are gzip compressed so expand here
cov_1sdtf28ve0.s[22]++;zlib.gunzip(payload,(error,result)=>{cov_1sdtf28ve0.f[3]++;cov_1sdtf28ve0.s[23]++;if(error){cov_1sdtf28ve0.b[2][0]++;cov_1sdtf28ve0.s[24]++;logger.error("Not a valid Input. "+JSON.stringify(error));cov_1sdtf28ve0.s[25]++;return callback(null,"Success");}else{cov_1sdtf28ve0.b[2][1]++;// parse the result from JSON
let awslogsData=(cov_1sdtf28ve0.s[26]++,JSON.parse(result.toString('ascii')));cov_1sdtf28ve0.s[27]++;logger.info('Decoded payload:'+JSON.stringify(awslogsData));cov_1sdtf28ve0.s[28]++;exportable.sendSplunkEvent(awslogsData,splunkLog,config).then(count=>{cov_1sdtf28ve0.f[4]++;cov_1sdtf28ve0.s[29]++;if(count){cov_1sdtf28ve0.b[3][0]++;cov_1sdtf28ve0.s[30]++;splunkLog.flush((err,resp,body)=>{cov_1sdtf28ve0.f[5]++;cov_1sdtf28ve0.s[31]++;// Request failure or valid response from Splunk with HEC error code
if((cov_1sdtf28ve0.b[5][0]++,err)||(cov_1sdtf28ve0.b[5][1]++,body)&&(cov_1sdtf28ve0.b[5][2]++,body.code!==0)){cov_1sdtf28ve0.b[4][0]++;cov_1sdtf28ve0.s[32]++;logger.error("Splunk error:"+JSON.stringify(err));cov_1sdtf28ve0.s[33]++;return callback(JSON.stringify((cov_1sdtf28ve0.b[6][0]++,err)||(cov_1sdtf28ve0.b[6][1]++,body)));}else{cov_1sdtf28ve0.b[4][1]++;cov_1sdtf28ve0.s[34]++;// If succeeded, body will be { text: 'Success', code: 0 }
logger.info('Response from Splunk:'+JSON.stringify(body));cov_1sdtf28ve0.s[35]++;logger.info(`Successfully processed ${count} log event(s).`);cov_1sdtf28ve0.s[36]++;return callback(null,count);// Return number of log events
}});}else{cov_1sdtf28ve0.b[3][1]++;cov_1sdtf28ve0.s[37]++;return callback(null,"Success");}}).catch(error=>{cov_1sdtf28ve0.f[6]++;cov_1sdtf28ve0.s[38]++;console.log("xsxswxswxsw");cov_1sdtf28ve0.s[39]++;logger.error(JSON.stringify(error));cov_1sdtf28ve0.s[40]++;return callback(null,"Success");});}});});}catch(e){cov_1sdtf28ve0.s[41]++;logger.error("Error:"+JSON.stringify(e));cov_1sdtf28ve0.s[42]++;return callback(null,"Success");}}else{cov_1sdtf28ve0.b[0][1]++;cov_1sdtf28ve0.s[43]++;logger.debug("No logs for Splunk forwarder.");cov_1sdtf28ve0.s[44]++;return callback(null,"Success");}}function sendSplunkEvent(awslogsData,splunkLog,config){cov_1sdtf28ve0.f[7]++;cov_1sdtf28ve0.s[45]++;return new Promise((resolve,reject)=>{cov_1sdtf28ve0.f[8]++;let count=(cov_1sdtf28ve0.s[46]++,0);cov_1sdtf28ve0.s[47]++;if(awslogsData.messageType==='CONTROL_MESSAGE'){cov_1sdtf28ve0.b[7][0]++;cov_1sdtf28ve0.s[48]++;logger.debug('Received CONTROL MESSAGE.');cov_1sdtf28ve0.s[49]++;resolve();}else{cov_1sdtf28ve0.b[7][1]++;cov_1sdtf28ve0.s[50]++;if(awslogsData.logGroup.indexOf("API-Gateway-Execution-Logs")===0){cov_1sdtf28ve0.b[8][0]++;cov_1sdtf28ve0.s[51]++;utils.transformApiLogs(awslogsData).then(splunkBulkData=>{cov_1sdtf28ve0.f[9]++;cov_1sdtf28ve0.s[52]++;exportable.sendDataToSplunk(splunkLog,splunkBulkData,config);cov_1sdtf28ve0.s[53]++;count++;cov_1sdtf28ve0.s[54]++;resolve(count);}).catch(error=>{cov_1sdtf28ve0.f[10]++;cov_1sdtf28ve0.s[55]++;logger.error(error);cov_1sdtf28ve0.s[56]++;resolve();});}else{cov_1sdtf28ve0.b[8][1]++;cov_1sdtf28ve0.s[57]++;if(awslogsData.logGroup.indexOf("/aws/lambda/")===0){cov_1sdtf28ve0.b[9][0]++;cov_1sdtf28ve0.s[58]++;utils.getCommonData(awslogsData).then(commonData=>{cov_1sdtf28ve0.f[11]++;cov_1sdtf28ve0.s[59]++;awslogsData.logEvents.forEach(logEvent=>{cov_1sdtf28ve0.f[12]++;cov_1sdtf28ve0.s[60]++;utils.transformLambdaLogs(logEvent,commonData).then(event=>{cov_1sdtf28ve0.f[13]++;cov_1sdtf28ve0.s[61]++;exportable.sendDataToSplunk(splunkLog,event,config);cov_1sdtf28ve0.s[62]++;count++;cov_1sdtf28ve0.s[63]++;if(count===awslogsData.logEvents.length){cov_1sdtf28ve0.b[10][0]++;cov_1sdtf28ve0.s[64]++;resolve(count);}else{cov_1sdtf28ve0.b[10][1]++;}}).catch(error=>{cov_1sdtf28ve0.f[14]++;cov_1sdtf28ve0.s[65]++;logger.error("Error in sendSplunkEvent:"+JSON.stringify(error));cov_1sdtf28ve0.s[66]++;resolve();});});});}else{cov_1sdtf28ve0.b[9][1]++;cov_1sdtf28ve0.s[67]++;logger.debug('Received unsupported logEvents');cov_1sdtf28ve0.s[68]++;resolve();}}}});}function sendDataToSplunk(splunkLog,eventData,config){cov_1sdtf28ve0.f[15]++;cov_1sdtf28ve0.s[69]++;logger.debug("Send event data:"+JSON.stringify(eventData));let payload=(cov_1sdtf28ve0.s[70]++,{message:eventData.event,metadata:{sourcetype:eventData.sourcetype,index:config.SPLUNK_INDEX}});cov_1sdtf28ve0.s[71]++;splunkLog.send(payload);}const exportable=(cov_1sdtf28ve0.s[72]++,{handler,sendSplunkEvent,sendDataToSplunk});cov_1sdtf28ve0.s[73]++;module.exports=exportable;